import{_ as s,o as n,c as a,R as l}from"./chunks/framework.0a8b4614.js";const E=JSON.parse('{"title":"docker005 registry 仓库","description":"","frontmatter":{},"headers":[],"relativePath":"cloudnative/docker/docker-registry.md","filePath":"cloudnative/docker/docker-registry.md","lastUpdated":1663671769000}'),p={name:"cloudnative/docker/docker-registry.md"},o=l(`<h1 id="docker005-registry-仓库" tabindex="-1">docker005 registry 仓库 <a class="header-anchor" href="#docker005-registry-仓库" aria-label="Permalink to &quot;docker005 registry 仓库&quot;">​</a></h1><p>官方文档: <a href="https://docs.docker.com/registry/configuration/" target="_blank" rel="noreferrer">https://docs.docker.com/registry/configuration/</a></p><h2 id="搭建私有仓库" tabindex="-1">搭建私有仓库 <a class="header-anchor" href="#搭建私有仓库" aria-label="Permalink to &quot;搭建私有仓库&quot;">​</a></h2><p>从官方提供的registry镜像简单搭建一套本地私有仓库.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Step 1: 搭建仓库</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># mkdir -pv /opt/data/registry # 没有的目录, docker会创建</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5000</span><span style="color:#C3E88D;">:5000</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">--restart=always</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">--privileged=true</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/registry:/var/lib/registry</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">--name=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">registry</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">registry:2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 参数说明:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -v /opt/data/registry:/tmp/registry </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     默认情况下，会将仓库存放于容器内的/tmp/registry目录下，指定本地目录挂载到容器</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --privileged=true</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     CentOS7中的安全模块selinux把权限禁掉了，参数给容器加特权，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     不加上传镜像会报权限错误(OSError: [Errno 13] Permission denied: ‘/tmp/registry/repositories/liibrary’)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     或者（Received unexpected HTTP status: 500 Internal Server Error）错误</span></span></code></pre></div><h2 id="上传镜像到私有仓库" tabindex="-1">上传镜像到私有仓库 <a class="header-anchor" href="#上传镜像到私有仓库" aria-label="Permalink to &quot;上传镜像到私有仓库&quot;">​</a></h2><p><a href="https://docs.docker.com/engine/reference/commandline/commit/" target="_blank" rel="noreferrer">https://docs.docker.com/engine/reference/commandline/commit/</a></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10.10.10.101</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Step 2:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 对镜像做一些修改</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 修改国内源,装vim net-tools等</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Step 3: </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># docker commit 镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">add mirrors, install vim net-tools</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">okeyear@163.com</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2263</span><span style="color:#C3E88D;">bed44655</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myubuntu:1.0</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">images</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># OPTIONS说明：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     -a :提交的镜像作者；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     -c :提交时候执行的Dockerfile指令；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     -m :提交时的说明文字；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#     -p :在commit时，将容器暂停。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Step 4: </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># tag标记, 修改成符合私服规范的tag;   </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 如果已经打了tag, 可省略</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># docker tag IMAGE[:TAG] [REGISTRYHOST/][USERNAME/]NAME[:TAG]</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myubuntu:1.0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/myubuntu:1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Step 5: </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 修改docker配置文件/etc/docker/daemon.json, 允许http方式传输</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 因为是json格式, 这个粘贴进去之后,注意前后是否要加逗号</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># &quot;insecure-registries&quot;: [&quot;\${registry_ip}:5000&quot;] ,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#	&quot;insecure-registries&quot;: [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#		&quot;10.10.10.10:5000&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#	]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#FFCB6B;">service</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Step 6: </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 上传前查看</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-XGET</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/v2/_catalog</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># push上传</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/myubuntu:1.0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 上传后查看</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-XGET</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/v2/_catalog</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看所有的image和tag</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> -XGET http://</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/v2/_catalog </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">jq</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.repositories[] | tostring</span><span style="color:#89DDFF;">&#39;)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-XGET</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/v2/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">//</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">/}</span><span style="color:#C3E88D;">/tags/list</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span></code></pre></div><h2 id="从私有仓库下载镜像" tabindex="-1">从私有仓库下载镜像 <a class="header-anchor" href="#从私有仓库下载镜像" aria-label="Permalink to &quot;从私有仓库下载镜像&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Step 7: </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># pull下载, 在其他地方使用</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 需要在/etc/docker/daemon.json中registry-mirrors配置私有仓库地址</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 先删除本地的images</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/myubuntu:1.0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myubuntu:1.0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 从仓库pull一个</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">registry_ip</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">:5000/myubuntu:1.0</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">images</span></span></code></pre></div>`,10),e=[o];function t(c,r,i,y,C,D){return n(),a("div",null,e)}const F=s(p,[["render",t]]);export{E as __pageData,F as default};
